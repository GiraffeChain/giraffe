syntax = "proto3";

package blockchain.services;

import "validate/validate.proto";
import 'models/core.proto';

service NodeRpc {
    rpc BroadcastTransaction (BroadcastTransactionReq) returns (BroadcastTransactionRes);
    rpc GetBlockHeader(GetBlockHeaderReq) returns (GetBlockHeaderRes);
    rpc GetBlockBody(GetBlockBodyReq) returns (GetBlockBodyRes);
    rpc GetFullBlock(GetFullBlockReq) returns (GetFullBlockRes);
    rpc GetTransaction(GetTransactionReq) returns (GetTransactionRes);
    rpc GetBlockIdAtHeight(GetBlockIdAtHeightReq) returns (GetBlockIdAtHeightRes);
    rpc Follow(FollowReq) returns (stream FollowRes);
    rpc GetAccountState(GetAccountStateReq) returns (GetAccountStateRes);
    rpc GetLockAddressState(GetLockAddressStateReq) returns (GetLockAddressStateRes);
    rpc GetTransactionOutput(GetTransactionOutputReq) returns (GetTransactionOutputRes);
}

message BroadcastTransactionReq {
    blockchain.models.Transaction transaction = 1 [(validate.rules).message.required = true];
}

message BroadcastTransactionRes {}

message GetBlockHeaderReq {
    blockchain.models.BlockId blockId = 1 [(validate.rules).message.required = true];
}

message GetBlockHeaderRes {
    blockchain.models.BlockHeader header = 1;
}

message GetBlockBodyReq {
    blockchain.models.BlockId blockId = 1 [(validate.rules).message.required = true];
}

message GetBlockBodyRes {
    blockchain.models.BlockBody body = 1;
}

message GetFullBlockReq {
    blockchain.models.BlockId blockId = 1 [(validate.rules).message.required = true];
}

message GetFullBlockRes {
    blockchain.models.FullBlock fullBlock = 1;
}

message GetTransactionReq {
    blockchain.models.TransactionId transactionId = 1 [(validate.rules).message.required = true];
}

message GetTransactionRes {
    blockchain.models.Transaction transaction = 1;
}

message FollowReq {}

message FollowRes {
    oneof step {
        blockchain.models.BlockId adopted = 1;
        blockchain.models.BlockId unadopted = 2;
    }
}

message GetBlockIdAtHeightReq {
    // Non-positive value -> Depth
    // i.e. `0` returns canonical head, `-1` returns canonical head's parent
    int64 height = 1;
}

message GetBlockIdAtHeightRes {
    blockchain.models.BlockId blockId = 1;
}

message GetAccountStateReq {
    blockchain.models.TransactionOutputReference account = 1 [(validate.rules).message.required = true];
}

message GetAccountStateRes {
    repeated blockchain.models.TransactionOutputReference transactionOutputs = 1;
}

message GetLockAddressStateReq {
    blockchain.models.LockAddress address = 1 [(validate.rules).message.required = true];
}

message GetLockAddressStateRes {
    repeated blockchain.models.TransactionOutputReference transactionOutputs = 1;
}

message GetTransactionOutputReq {
    blockchain.models.TransactionOutputReference reference = 1 [(validate.rules).message.required = true];
}

message GetTransactionOutputRes {
    blockchain.models.TransactionOutput transactionOutput = 1;
}
